#!/bin/bash
set -e

# Colors for better output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check for required environment variables
required_vars=("DEVPOD" "DEVPOD_WORKSPACE_ID")
missing_vars=()

for var in "${required_vars[@]}"; do
  if [ -z "${!var}" ]; then
    missing_vars+=("$var")
  fi
done

if [ ${#missing_vars[@]} -ne 0 ]; then
  echo -e "${RED}Error: The following required environment variables are not set:${NC}"
  for var in "${missing_vars[@]}"; do
    echo "  - $var"
  done
  echo "Please set these variables before running this script."
  exit 1
fi

# Script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BASE_DIR="/workspaces/$DEVPOD"
CLUSTER_NAME="study-app-cluster"
KEY_DIR="/workspaces/$DEVPOD_WORKSPACE_ID/dev-keys"

echo -e "${GREEN}DevOps Study App - Kubernetes GitOps Deployment Helper${NC}"
echo -e "${YELLOW}This script will set up a k3d cluster and configure GitOps for the study app.${NC}"
echo ""

# Check for required tools
check_dependency() {
  if ! command -v "$1" &>/dev/null; then
    echo -e "${RED}Error: $1 is not installed. Please install it before proceeding.${NC}"
    exit 1
  fi
}

echo "Checking dependencies..."
check_dependency k3d
check_dependency kubectl
check_dependency docker
check_dependency flux
echo -e "${GREEN}All dependencies are installed.${NC}"
echo ""

# Check if cluster exists
if k3d cluster list | grep -q "$CLUSTER_NAME"; then
  echo -e "${YELLOW}Cluster $CLUSTER_NAME already exists.${NC}"
  read -p "Do you want to delete and recreate it? (y/n): " -r
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "Deleting existing cluster..."
    k3d cluster delete "$CLUSTER_NAME"
  else
    echo "Using existing cluster."
  fi
fi

# Create cluster if it doesn't exist
if ! k3d cluster list | grep -q "$CLUSTER_NAME"; then
  echo "Creating k3d cluster using config file..."
  k3d cluster create --config "$SCRIPT_DIR/k3d-config.yaml"
  echo -e "${GREEN}Cluster created successfully!${NC}"
fi

# Configure kubectl to use the cluster
echo "Configuring kubectl to use the cluster..."
kubectl config use-context k3d-"$CLUSTER_NAME"

# Check for deploy keys
if [ ! -f "$KEY_DIR/study_app_gitops_deploy_key" ]; then
  echo -e "${YELLOW}Deploy keys not found.${NC}"
  if [ -x "$BASE_DIR/scripts/setup_deploy_key" ]; then
    echo "Running setup_deploy_key script..."
    "$BASE_DIR/scripts/setup_deploy_key"
  else
    echo -e "${RED}Cannot find setup_deploy_key script. Please generate deploy keys manually.${NC}"
    exit 1
  fi
fi

# Setup GitOps with Flux
echo "Setting up GitOps with Flux..."
"$SCRIPT_DIR/setup_gitops"
echo -e "${GREEN}GitOps setup completed!${NC}"

# Wait for Flux to be ready
echo "Waiting for Flux controllers to be ready..."
kubectl -n flux-system wait --for=condition=Ready pods --all --timeout=120s

echo -e "${GREEN}GitOps deployment configured successfully!${NC}"
echo "Flux will now sync and deploy the application from your GitOps repository."
echo -e "${YELLOW}Note: Your GitOps repository should have proper Kubernetes manifests in the clusters/dev path.${NC}"

echo -e "\nTo check the status of Flux GitOps:"
echo -e "${YELLOW}flux get all${NC}"

echo -e "\nTo check deployment status:"
echo -e "${YELLOW}kubectl get pods -n study-app${NC}"

echo -e "\nTo delete the cluster when finished:"
echo -e "${YELLOW}k3d cluster delete $CLUSTER_NAME${NC}"
